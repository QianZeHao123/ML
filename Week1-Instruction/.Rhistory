NAME = "Zehao Qian"
COLLABORATORS = "Zehao Qian"
movies = data.frame(
Rank = 1:5,
Title = c("Star Wars: The Force Awakens",
"Skyfall",
"No Time to Die",
"Spiderman: No Way Home",
"Avatar")
)
View(movies)
NAME = "Zehao Qian"
COLLABORATORS = "Zehao Qian"
movies = data.frame(
Rank = 1:5,
Title = c("Star Wars: The Force Awakens",
"Skyfall",
"No Time to Die",
"Spiderman: No Way Home",
"Avatar")
)
View(movies)
movies['Gross']=c(123.3, 102.8, 98.0, 97.2, 96.7)
View(movies)
movies['Year']=c(2015,2012,2021,2021,2009)
movies=movies[,c('Rank','Title','Year','Gross')]
View(movies)
movies
movies[6,]=c(6, "Barbie", 2023, 95.6)
View(movies)
movies_newrows = data.frame(
Rank = 7:8,
Title = c("Spectre","Avengers:Endgame"),
Year = c(2015, 2019),
Gross = c(95.2, 88.7)
)
movies = rbind(movies, movies_newrows)
movies
View(
movies[order(movies$Year,decreasing=TRUE),]
)
movies_newrows = data.frame(
Rank = 9:12,
Title = c("Top Gun: Maverick","Star Wars: The Last Jedi","Titanic","Avatar: The Way of Water"),
Year = c(2022, 2017, 1998, 2022),
Gross = c(83.7, 82.7, 82.7, 76.9)
)
movies = rbind(movies, movies_newrows)
View(
movies[order(movies$Year),]
)
library(MASS)
data(Boston)
head(Boston, n=5) #The head function shows the first n rows in a dataframe
```{r}
# Fit the linear regression model
model <- lm(medv ~ rm + lstat + indus + ptratio, data=Boston)
# Save the estimated regression coefficients
b_lm <- coef(model)
# Print b
b_lm
Y = Boston$medv
Xpart = Boston[,c('rm','lstat','indus','ptratio')]
X = cbind(1,Xpart) #this looks like cheating but it works for dataframes,
#you can also use rep to first create a unit vector!
head(X)
Y = as.matrix(Y)
X = as.matrix(X)
trX = t(X)
trXX = trX%*%X
trXX
inv_trXX = solve(trXX)
inv_trXX
b_calc = inv_trXX %*% (trX %*% Y)
print(b_calc)
print(b_lm)
Xpart = poly(Boston$lstat, 2, raw = TRUE)
X = cbind(1, Xpart)
Y = as.matrix(Y)
X = as.matrix(X)
trX = t(X)
trXX = trX %*% X
inv_trXX = solve(trXX)
b_calc = inv_trXX %*% (trX %*% Y)
print(b_calc)x
print(b_calc)
lm_model_poly = lm(medv ~ poly(lstat, 2, raw = TRUE), data = Boston)
print(coef(lm_model_poly))
